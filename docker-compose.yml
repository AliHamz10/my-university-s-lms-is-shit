version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: lms_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: university_lms
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - lms_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lms_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lms_network

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: lms_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    depends_on:
      - mongodb
    networks:
      - lms_network

  # Node.js Backend
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: lms_server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/university_lms
      REDIS_URL: redis://redis:6379
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - lms_network
    command: npm run dev

  # React Frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: lms_client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - lms_network
    command: npm run dev

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  lms_network:
    driver: bridge
